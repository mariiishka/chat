name: e2e

on:
  push:
    branches:
      - dev

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 20.x.x
  #         cache: npm
  #     - run: npm ci
  #     - run: npm run lint
  #     - run: npm run lint:types
  #     - run: npm run test
  wait_for-vercel-deployment:
    # needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve deployment URL
        run: 'echo VERCEL_DEPLOYMENT_URL=portfolio-nine-weld-12.vercel.app >> $GITHUB_ENV'

      - uses: UnlyEd/github-action-await-vercel@v1 # TODO best practices recommend to use a fixed version instead of @v1 for production usage (i.e: @v1.2.32)
        id: await-vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          deployment-url: ${{ env.VERCEL_DEPLOYMENT_URL }}
          timeout: 10 # Wait for 10 seconds before failing

      - name: Displays the deployment name (example on how to read information about the deployment)
        run: 'echo The deployment at ${{ fromJson(steps.await-vercel.outputs.deploymentDetails).url }} is ${{ fromJson(steps.await-vercel.outputs.deploymentDetails).readyState }}'
  e2e:
    needs: wait_for-vercel-deployment
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x.x
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
        env:
          TEST_ENV_BASE_URL: https://staging.micro-courses.ru
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
